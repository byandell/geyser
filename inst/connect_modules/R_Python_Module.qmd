---
title: "Mixed Python and R Code Example"
format: 
  dashboard:
    orientation: columns
server: shiny
---

## Column -- Python {width=50%}

```{python}
#| context: setup
#| title: Python Example
import seaborn as sns
geyser = sns.load_dataset("geyser")
```

### Row -- Python Input {height="40%"}

```{python}
#| context: ui
from shiny.express import render, ui
ui.input_select("x", "Variable:", choices=["duration", "waiting"])
ui.input_select("dist", "Distribution:", choices=["hist", "kde"])
ui.input_checkbox("rug", "Show rug marks", value = False)
```

### Row -- Python Output {height="60%"}

```{python}
from shiny.express import render, ui
@render.plot
def displot():
    sns.displot(
        data=geyser, hue="kind", #multiple="stack",
        x=input.x(), rug=input.rug(), kind=input.dist())
```

## Column -- R {width="50%"}

```{r}
#| context: setup
#| title: R Example
library(ggplot2)
geyser <- faithful |>
  dplyr::rename(duration = "eruptions") |>
  dplyr::mutate(kind = c("short","long")[1 + (waiting > 67)])
```

### Row -- R Input {height="40%"}

```{r}
library(shiny)
selectInput("x", "Variable:", choices=c("duration", "waiting"))
selectInput("dist", "Distribution:", choices=c("hist", "kde"))
checkboxInput("rug", "Show rug marks", value = FALSE)
```

### Row -- R Output {height="60%"}

```{r}
plotOutput('plot')
```

```{r}
#| context: server
output$plot <- renderPlot({
  p <- ggplot(geyser) +
    aes_string(x=input$x, color="kind")
  p <- p + switch(input$dist,
    hist = geom_histogram(),
    kde = geom_density())
  if(input$rug) p <- p + geom_rug()
  p
})
```

